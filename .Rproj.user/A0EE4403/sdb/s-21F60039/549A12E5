{
    "collab_server" : "",
    "contents" : "\n#'\n#'@param table A string that is the name of the table\n#'@param data a matrix that's m is the bulk of observations and n is the number of features\n#'@param where the column that you are matching\n#'@param the value that is being matched\n#'\n#'@examples\n#'sql_update('Cars', car_data_frame, 'Car', 'honda')\n#'@export\n\nlibrary(stringr)\nsql_update <- function(table_name, data, where, where_equals) {\n  if (!exists(\"connection\")) stop(\"There is no connection open.\")\n  sqlUpdateBuilder(table_name, data, where, where_equals)\n}\n\nsqlUpdateBuilder <- function(table, data, where, where_equals) {\n\n  row_names <- names(data)\n\n  if(!(class(data) == 'data.frame' ||'matrix')) stop('Please use a data frame')\n\n  for (i in 1:nrow(data)) {\n    sql <- paste('update',table)\n    set_sql <- ' set '\n\n    sql_set = ''\n\n    for (j in 1:ncol(data)) {\n      sql_set <- paste(sql_set, row_names[j],'=\\'', data[i,j], '\\'', ', ', sep='')\n\n    }\n\n    if(i == nrow(data)) {\n      dataFrame <- paste(sql)\n    }\n    else {\n      dataFrame <- paste(sql, ' set ', sql_set, sep = '')\n\n    }\n    dataFrame <- paste(substring(dataFrame, 1, (nchar(dataFrame)-2)))\n    dataFrame <- paste(dataFrame,' where ', where, '=','\\'', where_equals,'\\'', ';', sep='' )\n    print(dataFrame)\n    results <- dbSendQuery(connection, dataFrame)\n\n\n  }\n\n}\n\n\n\n\n\n\n",
    "created" : 1464943008170.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1897519321",
    "id" : "549A12E5",
    "lastKnownWriteTime" : 1465167817,
    "last_content_update" : 1465167817351,
    "path" : "~/git/SQLiteR/R/sql_update.R",
    "project_path" : "R/sql_update.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}